import pandas as pd
import json
import re
import os
from dotenv.main import load_dotenv

load_dotenv()\

file = os.environ['DIRECTORY'] #DIRECTORY: File path for respective .csv file
file_path_list = re.split('[/\\\]', file)
file_name = file_path_list[-1]

df = pd.read_csv(file, encoding='unicode_escape')


def generate_dict():
    '''
    Using the dataframe this function extracts necessary data from the csv file such as:
        column_name, data_type, column_position.
    
    These values are appended to an empty list(values) inside the function.
    A dictionary is created by zipping 2 lists (keys and values). 
    This dictionary is further appended to an empty list called result.
    '''
    keys = ["column_name", "data_type", "column_position"]
    result = []
    column_headers = list(df)
    for column_num, column_head in enumerate(column_headers):
        values = []
        values.append(column_head)
        values.append(df.dtypes[column_head])
        values.append(column_num + 1)
        dictionary = dict(zip(keys, values))    
        result.append(dictionary) 
    return result

def metadata():
    '''
    Creates a .json file which stores metadata as JSON dictionary.
    Uses an empty dictionary(metadata_dict) whose value is further set to a dictionary generated by generate_dict().
    '''
    metadata_dict = {}
    metadata_dict[file_name] = generate_dict()
    with open("metadata1.json", "w") as fp:
        json.dump(metadata_dict, fp, default=str, indent=4)

if __name__ == "__main__":
    metadata()

